<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.company.app.concert.ConcertMapper">

	<resultMap type="com.company.app.concert.Concert" id="resultMapObj"></resultMap>
	<sql id ="selectCommon">
   		FROM    
	    	concert a
	    	LEFT JOIN concertAddress b on b.concert_seq = a.seq 
    		LEFT JOIN concertDate c on c.concertAddress_seq = b.seq
    		LEFT JOIN concertCastingGroup d on d.concert_seq = a.seq
    		LEFT JOIN concertUploaded e on e.pseq = a.seq AND e.type = 1
		WHERE 1=1
			<if test="seq != null and !seq.equals('')">AND a.seq = #{seq}</if>
			<if test="concertType != null and !concertType.equals('')">AND a.concertType = #{concertType}</if>
    </sql>
    <sql id="selectConcert">
    	a.seq,
   		a.concertType,
   		a.concertTitle,
   		a.concertDetailText,
   		a.delNy,
   		a.defaultNy,
   		a.memberSeq,
   		b.concertZipCode,
   		b.concertAddress,
   		b.concertAddressDetail,
		c.concertDate,
		DATE_FORMAT (c.concertDateTime, '%H:%i')as concertDateTime,
		(SELECT
			e.name
		FROM
			concertCasting e
		WHERE 1=1
			AND e.seq = d.concertCasting_seq
		) as name,
		c.seq as concertDateSeq
	</sql>


   	<select id="selectOneCount" resultType="Integer">
		SELECT count(*)
		<include refid="selectCommon" />
	</select>
   	<select id="selectList" resultMap="resultMapObj">
		SELECT aa.* FROM (   	
	   		SELECT
    		<include refid="selectConcert" />
	    	<include refid="selectCommon" />
		) aa
		LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}	   			
   	</select>
   	<select id="selectOne" resultMap="resultMapObj">
	   		SELECT
    		<include refid="selectConcert" />
    	FROM    
	    	concert a
	    	LEFT JOIN concertAddress b on b.concert_seq = a.seq 
    		LEFT JOIN concertDate c on c.concertAddress_seq = b.seq
    		LEFT JOIN concertCastingGroup d on d.concert_seq = a.seq
		WHERE 1=1
			AND a.seq = #{seq}
			AND c.seq = #{concertDateSeq}
   	</select>
   	<select id="selectConcertList" resultMap="resultMapObj">
   		SELECT
   			a.seq,
   			a.concertType,
   			a.concertTitle,
   			(SELECT
   				MIN(d.concertDate)
   			FROM
   				concertDate d
   			WHERE 1=1
   				AND d.concertAddress_Seq = b.seq
   			) as concertDateMin,
   			(SELECT
   				MAX(d.concertDate)
   			FROM
   				concertDate d
   			WHERE 1=1
   				AND d.concertAddress_Seq = b.seq
   			) as concertDateMax,
   			da.name,
			b.concertAddress,
			b.concertAddressDetail,
			b.seq concertAddress_seq,
			e.type,
			e.path,
			e.originalName,
			e.uuidName,
			f.seq concertDate_seq
   		FROM
   			concert a
   			LEFT JOIN concertAddress b on b.concert_seq = a.seq 
   			LEFT JOIN concertCastingGroup d on d.concert_seq = a.seq
   			LEFT JOIN concertCasting da on da.seq = d.concertCasting_seq
   			LEFT JOIN concertUploaded e on e.pseq = a.seq ANd e.type =1
   			LEFT JOIN concertDate f on f.concertAddress_seq = b.seq AND f.defaultNy = 1
   		WHERE 1=1
   			<if test="concertType != null and !concertType.equals('')">AND a.concertType = #{concertType}</if>
   			<if test="search != null and !search.equals('')">AND ${searchType}  LIKE CONCAT ('%',#{search},'%')</if>
   			AND e.type = 1
   	</select>
   	<select id="selectConcertOne" resultMap="resultMapObj">
   		SELECT
   			a.seq,
   			a.concertType,
   			a.concertTitle,
   			(SELECT
   				MIN(d.concertDate)
   			FROM
   				concertDate d
   			WHERE 1=1
   				AND d.concertAddress_Seq = b.seq
   			) as concertDateMin,
   			(SELECT
   				MAX(d.concertDate)
   			FROM
   				concertDate d
   			WHERE 1=1
   				AND d.concertAddress_Seq = b.seq
   			) as concertDateMax,
   			(SELECT
				e.name
			FROM
				concertCasting e
			WHERE 1=1
				AND e.seq = d.concertCasting_seq
			) as name,
			b.concertAddress,
			b.concertAddressDetail,
			b.seq concertAddress_seq
   		FROM
   			concert a
   			LEFT JOIN concertAddress b on b.concert_seq = a.seq 
   			LEFT JOIN concertCastingGroup d on d.concert_seq = a.seq
   		WHERE 1=1
   			AND a.seq = #{seq}
   	</select>
   	<select id="selectDate" resultMap="resultMapObj">
   		SELECT
   			seq,
   			concertDate,
   			concertAddress_seq,
   			defaultNy,
   			DATE_FORMAT (concertDateTime, '%H:%i')as concertDateTime,
   			concertDateYear,
   			concertDateMonth
   		FROM
   			concertDate
   		WHERE 1=1
   			AND concertAddress_seq = #{concertAddress_seq}
   			<if test="concertDate != null and !concertDate.equals('')">AND concertDate LIKE CONCAT('%',#{concertDate},'%')</if>
   			<if test="dateDefaultNy != null and !dateDefaultNy.equals('')">AND defaultNy = 1</if>
   			
   		ORDER BY
   			concertDate, concertDateTime
   	</select>
   	<select id="selectSeatCount" resultType="Integer">
   		SELECT
   			count(*)
   		FROM
   			concertAddressSeat
   		WHERE 1=1
   			AND concertDate_seq = #{concertDate_seq}
   	</select>
   	<select id="selectSeat" resultMap="resultMapObj">
   		SELECT
   			*
   		FROM
   			concertAddressSeat
   		WHERE 1=1
   			AND concertDate_seq = #{concertDate_seq}
   		ORDER BY
   			seatRow, seatCol
   	</select>
   	<select id="selectSeatGroup" resultMap="resultMapObj">
   		SELECT
   			*,
   			sum(seatNy) seatN,
   			count(seatNy) seatTotal
   		FROM
   			concertAddressSeat
   		WHERE 1=1
   			<if test="concertDate_seq != null and !concertDate_seq.equals('')">AND concertDate_seq = #{concertDate_seq}</if>
   		GROUP BY seatRank
   	</select>
   	<select id="selectSeatRow" resultMap="resultMapObj">
   		SELECT
   			*
   		FROM
   			concertAddressSeat
   		WHERE 1=1
   			<if test="concertDate_seq != null and !concertDate_seq.equals('')">AND concertDate_seq = #{concertDate_seq}</if>
   		GROUP BY seatRow
   	</select>
   	<select id="selectTicket" resultMap="resultMapObj">
   		SELECT
   			seq,
   			delNy,
   			ticketDate,
   			ticketDateRe,
   			memberSeq,
   			concertAddressSeat_seq
   		FROM
   			concertTicket
   		WHERE 1=1
   	</select>
   	<select id="selectReview" resultMap="resultMapObj">
   		SELECT
   			seq,
   			content,
   			concertGrade,
   			concertReviewDate,
   			defaultNy,
   			delNy,
   			memberSeq,
   			concertDate_seq,
   			concertTicket_seq
   		FROM
   			concertReview
   		WHERE 1=1
   	</select>
   	<select id="selectUploaded" resultMap="resultMapObj">
    	SELECT
    		*
    	FROM
    		concertUploaded
		WHERE 1=1
	    	AND pseq = #{seq}
	    	
    </select>
    <select id="selectTicketUsr" resultMap="resultMapObj">
    	SELECT
    		f.path,
    		f.uuidName,
    		b.concertTitle,
    		c.concertAddress,
    		c.concertAddressDetail,
    		d.concertDate,
    		DATE_FORMAT (d.concertDateTime, '%H:%i')as concertDateTime,
    		a.seq,
    		e.seatRow,
    		e.seatCol
    	FROM
    		concertTicket a
    		LEFT JOIN concertAddressSeat e on e.seq = a.concertAddressSeat_seq
    		LEFT JOIN concertDate d on d.seq = e.concertDate_seq
            LEFT JOIN concertAddress c on c.seq = d.concertAddress_seq
    		LEFT JOIN concert b on b.seq = c.concert_seq
    		LEFT JOIN concertUploaded f on f.pseq = b.seq AND type = 1
    	WHERE 1=1
    		AND a.memberSeq = #{memberSeq}
    </select>
    <select id="selectReviewUsr" resultMap="resultMapObj">
    	SELECT
    		e.path,
    		e.uuidName,
    		(SELECT
    			aa.concertTitle
    		FROM
    			concert aa
    		WHERE 1=1
    			AND  aa.seq = b.concertSeq
    		) as concertTitle,
    		a.content,
    		a.concertGrade,
    		c.seatRow,
    		c.seatCol
    	FROM
    		concertReview a
    		LEFT JOIN concertTicket b on b.seq = a.concertTicket_seq
    		LEFT JOIN concertAddressSeat c on c.seq = b.concertAddressSeat_seq
    		LEFT JOIN concertUploaded e on e.pseq = b.concertSeq AND type = 1
    	WHERE 1=1
    		AND a.memberSeq = #{memberSeq}
    </select>
   	
   	<insert id="insertConcert">
    	insert into `concert` (
    		concertType,
			concertTitle,
			concertDetailText,
			delNy,
			defaultNy,
			memberSeq
    	) values(
    		#{concertType},
    		#{concertTitle},
    		#{concertDetailText},
    		0,
    		#{defaultNy},
    		#{memberSeq}
    	)
    	<selectKey resultType="String" keyProperty="seq" order="AFTER">
			SELECT last_insert_id()
		 </selectKey>
    </insert>
    <insert id="insertConcertAddress">
    	insert into `concertAddress` (
    		concertZipCode,
    		concertAddress,
    		concertAddressDetail,
    		concert_seq,
    		delNy
    	) values (
    		#{concertZipCode},
    		#{concertAddress},
    		#{concertAddressDetail},
    		#{seq},
    		0
    	)
    	<selectKey resultType="String" keyProperty="concertAddress_seq" order="AFTER">
			SELECT last_insert_id()
		 </selectKey>
    </insert>
    
    <insert id="insertConcertDate">
    	insert into `concertDate` (
    		concertDate,
    		concertDateTime,
    		defaultNy,
    		concertAddress_seq
    	) values (
    		#{concertDate},
    		#{concertDateTime},
    		#{dateDefaultNy},
    		#{concertAddress_seq}
    	)
    </insert>
    <insert id="insertConcertCasting">
    	insert into `concertCasting` (
    		name
    	) values (
    		#{name}
    	)
    	<selectKey resultType="String" keyProperty="concertCasting_seq" order="AFTER">
			SELECT last_insert_id()
		 </selectKey>
    </insert>
    <insert id="insertConcertCastingGroup">
    	insert into `concertCastingGroup` (
    		concert_seq,
    		concertCasting_seq
    	) values (
    		#{seq},
    		#{concertCasting_seq}
    	)
    </insert>
    <!-- uploaded s -->
	<insert id="insertUploaded">
		INSERT INTO ${tableName} (
			type
			,defaultNy
			,sort
			,path
			,originalName
			,uuidName
			,ext
			,size
			,delNy
			,pseq
		) values (
			#{type}
			,#{defaultNy}
			,#{sort}
			,#{path}
			,#{originalName}
			,#{uuidName}
			,#{ext}
			,#{size}
			,0
			,#{seq}
		)
	</insert>
	<insert id="insertSeat">
		insert into `concertAddressSeat`(
			seatRow,
			seatCol,
			seatNy,
			seatRank,
			seatRankPrice,
			concertDate_seq
		) values (
			#{seatRow},
			#{seatCol},
			0,
			#{seatRank},
			#{seatRankPrice},
			#{concertDate_seq}
		)
	
	</insert>
	<update id="update">
    	UPDATE 
    		concert
		SET 
			concertType = #{concertType},
			concertTitle = #{concertTitle},
			codeNumconcertDetailText = #{codeNumconcertDetailText},
			delNy= #{delNy},
			defaultNy= #{defaultNy},
			member_seq= #{member_seq}
		WHERE 
			seq = #{seq}
    </update>
    <delete id="deleteconcert">
    	DELETE FROM 
    		concert
		WHERE
			seq = #{seq}
    </delete>
    <delete id="deleteconcertAddress">
    	DELETE FROM 
    		concertAddress
		WHERE
			concert_seq = #{seq}
    </delete>
    <delete id="deleteconcertDate">
    	DELETE FROM 
    		concertDate
		WHERE
			seq = #{concertDateSeq}
    </delete>
    <delete id="deleteconcertAddressSeat">
    	DELETE FROM 
    		concertAddressSeat
		WHERE
			concertDate_seq = #{concertDateSeq}
    </delete>
    <delete id="deleteconcertTicket">
    	DELETE FROM 
    		concertTicket
		WHERE
			concertAddressSeat_seq = #{concertAddressSeat_seq}
    </delete>
    <delete id="deleteconcertUploaded">
    	DELETE FROM 
    		concertUploaded
		WHERE
			pseq = #{seq}
    </delete>
    <delete id="deleteconcertReview">
    	DELETE FROM 
    		concertReview
		WHERE
			concertTicket_seq = #{concertTicket_seq}
    </delete>
    <delete id="deleteconcertGroup">
    	DELETE FROM 
    		concertCastingGroup
		WHERE
			concert_seq = #{seq}
    </delete>
    
    <update id="updateconcert">
    	update 
    		concert
    	SET 
    		concertType = #{concertType}
    		, concertTitle = #{concertTitle}
    		, concertDetailText = #{concertDetailText}
    		, delNy = #{delNy}
    		, defaultNy = #{defaultNy}
    		, memberSeq = #{memberSeq}
		WHERE
			seq = #{seq}
    </update>
    <update id="updateconcertAddress">
    	update 
    		concertAddress
    	SET 
    		concertZipCode = #{concertZipCode}
    		, concertSido = #{concertSido}
    		, concertAddress = #{concertAddress}
    		, concertAddressDetail = #{concertAddressDetail}
    		, delNy = #{delNy}
		WHERE
    		concert_seq = #{seq}
    </update>
    <update id="updateconcertAddressSeat">
    	update 
    		concertAddressSeat
    	SET 
    		seatRow = #{seatRow}
    		, seatCol = #{seatCol}
    		, seatNy = #{seatNy}
    		, seatRank = #{seatRank}
    		, SeatRankPrice = #{SeatRankPrice}
		WHERE 1=1
			AND concertDate_seq = #{concertDate_seq}
			AND seatCol = #{seatCol}
			AND seatRow = #{seatRow}
    </update>
    <update id="updateconcertDate">
    	update 
    		concertDate
    	SET 
    		concertDate = #{concertDate}
    		, concertdatetime = #{concertDateTime}
    		, defaultNy = #{defaultNy}
    		, delNy = #{delNy}
		WHERE 1=1
			AND seq = #{concertDateSeq}
    </update>
    <update id="updateconcertGroup">
    	update 
    		concertCastingGroup
    	SET 
    		concertCasting_seq = #{concertCasting_seq}
		WHERE
			concert_seq = #{seq}
    </update>
    <update id="updateconcertReview">
    	update 
    		concertReview
    	SET 
    		content = #{content}
    		, concertGrade = #{concertGrade}
    		, concertReviewDate = #{concertReviewDate}
    		, defaultNy = #{defaultNy}
    		, delNy = #{delNy}
    		, memberSeq = #{memberSeq}
		WHERE 1=1
			AND	concertDate_seq = #{concertDate_seq}
			AND concertTicket_seq = #{concertTicket_seq}
    </update>
    <update id="updateconcertTicket">
    	update 
    		concertTicket
    	SET 
    		ticketDate = #{ticketDate}
    		, ticketDateRe = #{ticketDateRe}
    		, memberSeq = #{memberSeq}
    		, delNy = #{delNy}
		WHERE 1=1
			AND	concertAddressSeat_seq = #{concertAddressSeat_seq}
    </update>
    
   	<update id="ueleteconcert">
    	update 
    		concert
    	SET 
    		delNy = 1
		WHERE
			seq = #{seq}
    </update>
    <update id="ueleteconcertAddress">
    	update 
    		concertAddress
    	SET 
    		concertZipCode = #{concertZipCode}
    		, concertSido = #{concertSido}
    		, concertAddress = #{concertAddress}
    		, concertAddressDetail = #{concertAddressDetail}
    		, delNy = #{delNy}
		WHERE
    		concert_seq = #{seq}
    </update>
    <update id="ueleteconcertDate">
    	update 
    		concertDate
    	SET 
    		delNy = 1
		WHERE
			concertAddress_seq = #{concertAddress_seq}
    </update>
    <update id="ueleteconcertReview">
    	update 
    		concertReview
    	SET 
    		delNy = 1
		WHERE 1=1
			AND	concertDate_seq = #{concertDate_seq}
			AND concertTicket_seq = #{concertTicket_seq}
    </update>
    <update id="ueleteconcertTicket">
    	update 
    		concertTicket
    	SET 
    		delNy = 1
		WHERE 1=1
			AND	concertAddressSeat_seq = #{concertAddressSeat_seq}
    </update>
    <update id="ticketSuccess">
    	UPDATE
    		concertAddressSeat
    	SET
    		seatNy = 1
    	WHERE 1=1
    		AND seatRow = #{seatRow}
    		AND sesatCol = #{seatCol}
    </update>
    <update id="approvalTicket">
    	UPDATE
    		concertTicket
    	SET
    		ticketDate = now(),
    		ticketDateRe = now()
    	WHERE 1=1
    		AND tid = #{tid}
    		AND concertAddressSeat_seq = #{concertAddressSeat_seq} 
    </update>
    <update id="approvalSeat">
    	UPDATE
    		concertAddressSeat
    	SET
    		seatNy = 1
    	WHERE 1=1
    		AND seq = #{concertAddressSeat_seq}
    </update>
    <insert id="insertKakaoReady">
    	INSERT INTO `concertTicket` (
    		memberSeq,
    		concertSeq,
    		concertAddressSeat_seq,
    		tid,
    		partner_order_id,
    		partner_user_id,
    		delNy
    	) values (
    		${memberSeq},
    		#{seq},
    		#{concertAddressSeat_seq},
    		#{tid},
    		#{partner_order_id},
    		#{partner_user_id},
    		0
    	)
    </insert>
    
</mapper>